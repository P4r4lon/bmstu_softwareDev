{"ast":null,"code":"import { combineReducers, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport Utils from \"./Utils\";\n/* ACTIONS */\n\nconst userConstants = {\n  LOGIN: 'USER_LOGIN',\n  LOGOUT: 'USER_LOGOUT'\n};\nconst alertConstants = {\n  ERROR: 'ERROR',\n  CLEAR: 'CLEAR'\n};\n/* ACTION GENERATORS */\n\nexport const userActions = {\n  login,\n  logout\n};\n\nfunction login(user) {\n  Utils.saveUser(user);\n  return {\n    type: userConstants.LOGIN,\n    user\n  };\n}\n\nfunction logout() {\n  Utils.removeUser();\n  return {\n    type: userConstants.LOGOUT\n  };\n}\n\nexport const alertActions = {\n  error,\n  clear\n};\n\nfunction error(msg) {\n  return {\n    type: alertConstants.ERROR,\n    msg\n  };\n}\n\nfunction clear() {\n  return {\n    type: alertConstants.CLEAR\n  };\n}\n/* REDUCERS */\n\n\nlet user = Utils.getUser();\nconst initialState = user ? {\n  user\n} : {};\n\nfunction authentication() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"authentication\");\n\n  switch (action.type) {\n    case userConstants.LOGIN:\n      return {\n        user: action.user\n      };\n\n    case userConstants.LOGOUT:\n      return {};\n\n    default:\n      return state;\n  }\n}\n\nfunction alert() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"alert\");\n\n  switch (action.type) {\n    case alertConstants.ERROR:\n      return {\n        msg: action.msg\n      };\n\n    case alertConstants.CLEAR:\n      return {};\n\n    default:\n      return state;\n  }\n}\n/* STORE */\n\n\nconst rootReducer = combineReducers({\n  authentication,\n  alert\n});\nexport const store = configureStore({\n  reducer: rootReducer\n});","map":{"version":3,"names":["combineReducers","applyMiddleware","configureStore","Utils","userConstants","LOGIN","LOGOUT","alertConstants","ERROR","CLEAR","userActions","login","logout","user","saveUser","type","removeUser","alertActions","error","clear","msg","getUser","initialState","authentication","state","action","console","log","alert","rootReducer","store","reducer"],"sources":["/Users/david/Desktop/sshBMSTU/bmstu_softwareDev/backend/front/src/Utils/Rdx.jsx"],"sourcesContent":["import { combineReducers, applyMiddleware } from \"redux\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport Utils from \"./Utils\";\n\n/* ACTIONS */\nconst userConstants = {\n    LOGIN: 'USER_LOGIN',\n    LOGOUT: 'USER_LOGOUT',\n};\n\nconst alertConstants = {\n    ERROR: 'ERROR',\n    CLEAR: 'CLEAR',\n};\n\n/* ACTION GENERATORS */\nexport const userActions = {\n    login,\n    logout\n};\n\nfunction login(user) {\n    Utils.saveUser(user)\n    return { type: userConstants.LOGIN, user }\n}\n\nfunction logout() {\n    Utils.removeUser()\n    return { type: userConstants.LOGOUT }\n}\n\nexport const alertActions = {\n    error,\n    clear\n}\n\nfunction error(msg) {\n    return { type: alertConstants.ERROR, msg }\n}\n\nfunction clear() {\n    return { type: alertConstants.CLEAR }\n}\n\n/* REDUCERS */\nlet user = Utils.getUser()\nconst initialState = user ? { user } : {}\nfunction authentication(state = initialState, action) {\n    console.log(\"authentication\")\n    switch (action.type) {\n        case userConstants.LOGIN:\n            return { user: action.user };\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state\n    }\n}\n\n\nfunction alert(state = {}, action) {\n    console.log(\"alert\")\n    switch (action.type) {\n        case alertConstants.ERROR:\n            return { msg: action.msg };\n        case alertConstants.CLEAR:\n            return {};\n        default:\n            return state\n    }\n}\n\n/* STORE */\n\nconst rootReducer = combineReducers({\n    authentication, alert\n});\n\nexport const store = configureStore({ reducer: rootReducer });"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA;;AACA,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,YADW;EAElBC,MAAM,EAAE;AAFU,CAAtB;AAKA,MAAMC,cAAc,GAAG;EACnBC,KAAK,EAAE,OADY;EAEnBC,KAAK,EAAE;AAFY,CAAvB;AAKA;;AACA,OAAO,MAAMC,WAAW,GAAG;EACvBC,KADuB;EAEvBC;AAFuB,CAApB;;AAKP,SAASD,KAAT,CAAeE,IAAf,EAAqB;EACjBV,KAAK,CAACW,QAAN,CAAeD,IAAf;EACA,OAAO;IAAEE,IAAI,EAAEX,aAAa,CAACC,KAAtB;IAA6BQ;EAA7B,CAAP;AACH;;AAED,SAASD,MAAT,GAAkB;EACdT,KAAK,CAACa,UAAN;EACA,OAAO;IAAED,IAAI,EAAEX,aAAa,CAACE;EAAtB,CAAP;AACH;;AAED,OAAO,MAAMW,YAAY,GAAG;EACxBC,KADwB;EAExBC;AAFwB,CAArB;;AAKP,SAASD,KAAT,CAAeE,GAAf,EAAoB;EAChB,OAAO;IAAEL,IAAI,EAAER,cAAc,CAACC,KAAvB;IAA8BY;EAA9B,CAAP;AACH;;AAED,SAASD,KAAT,GAAiB;EACb,OAAO;IAAEJ,IAAI,EAAER,cAAc,CAACE;EAAvB,CAAP;AACH;AAED;;;AACA,IAAII,IAAI,GAAGV,KAAK,CAACkB,OAAN,EAAX;AACA,MAAMC,YAAY,GAAGT,IAAI,GAAG;EAAEA;AAAF,CAAH,GAAc,EAAvC;;AACA,SAASU,cAAT,GAAsD;EAAA,IAA9BC,KAA8B,uEAAtBF,YAAsB;EAAA,IAARG,MAAQ;EAClDC,OAAO,CAACC,GAAR,CAAY,gBAAZ;;EACA,QAAQF,MAAM,CAACV,IAAf;IACI,KAAKX,aAAa,CAACC,KAAnB;MACI,OAAO;QAAEQ,IAAI,EAAEY,MAAM,CAACZ;MAAf,CAAP;;IACJ,KAAKT,aAAa,CAACE,MAAnB;MACI,OAAO,EAAP;;IACJ;MACI,OAAOkB,KAAP;EANR;AAQH;;AAGD,SAASI,KAAT,GAAmC;EAAA,IAApBJ,KAAoB,uEAAZ,EAAY;EAAA,IAARC,MAAQ;EAC/BC,OAAO,CAACC,GAAR,CAAY,OAAZ;;EACA,QAAQF,MAAM,CAACV,IAAf;IACI,KAAKR,cAAc,CAACC,KAApB;MACI,OAAO;QAAEY,GAAG,EAAEK,MAAM,CAACL;MAAd,CAAP;;IACJ,KAAKb,cAAc,CAACE,KAApB;MACI,OAAO,EAAP;;IACJ;MACI,OAAOe,KAAP;EANR;AAQH;AAED;;;AAEA,MAAMK,WAAW,GAAG7B,eAAe,CAAC;EAChCuB,cADgC;EAChBK;AADgB,CAAD,CAAnC;AAIA,OAAO,MAAME,KAAK,GAAG5B,cAAc,CAAC;EAAE6B,OAAO,EAAEF;AAAX,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}